{
  "address": "0xb5bC012310B1594055605AB79C88De9D7E3A8d25",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawCheaper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb1f3da794db6cdeb0d311df89fe85261c8751cc2ef42e15f95fc1ed4a439e663",
  "receipt": {
    "to": null,
    "from": "0x2B5db68eef4FC4960f5E8B6cB8FD69dc887e49e2",
    "contractAddress": "0xb5bC012310B1594055605AB79C88De9D7E3A8d25",
    "transactionIndex": 80,
    "gasUsed": "1089592",
    "logsBloom": "0x
    "blockHash": "0x3ee48944b6d01f8fb7fc5a1c3bf1df6af323fa6c314709e113d9459c4ae89654",
    "transactionHash": "0xb1f3da794db6cdeb0d311df89fe85261c8751cc2ef42e15f95fc1ed4a439e663",
    "logs": [],
    "blockNumber": 8150235,
    "cumulativeGasUsed": "7290373",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "b53ac289c71d25c132a90f164c2c0ee3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawCheaper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n// import \\\"hardhat/console.sol\\\";\\n\\nerror FundMe_NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n\\n        // console.log(\\\"Transferring from %s to tokens\\\", msg.sender);\\n\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Sepolia Network.\\n        return s_priceFeed.version();\\n    }\\n\\n    function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe_NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n\\n    function withdrawCheaper() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address ad = funders[funderIndex];\\n            s_addressToAmountFunded[ad] = 0; \\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\",\"keccak256\":\"0x27043925d27ba93622ee0568a1ff2c4bd21c3965f9230640e8209ed05cc1959e\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x0ceab90bede2cd473f45acd738aa704f5d9e2ccb7f207be1b236636033da40b1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620013573803806200135783398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b6111eb806200016c6000396000f3fe6080604052600436106100955760003560e01c80636b69a592116100595780636b69a59214610195578063a13fe71f146101c0578063b60d4288146101d7578063d7b4750c146101e1578063dba6335f1461021e576100a4565b80630343fb25146100ae5780630d8e6e2c146100eb5780630ec3b027146101165780633ccfd60b1461014157806354861af714610158576100a4565b366100a4576100a2610249565b005b6100ac610249565b005b3480156100ba57600080fd5b506100d560048036038101906100d09190610c18565b610383565b6040516100e29190610c5e565b60405180910390f35b3480156100f757600080fd5b506101006103cb565b60405161010d9190610c5e565b60405180910390f35b34801561012257600080fd5b5061012b610463565b6040516101389190610cd8565b60405180910390f35b34801561014d57600080fd5b50610156610489565b005b34801561016457600080fd5b5061017f600480360381019061017a9190610d1f565b6106c5565b60405161018c9190610d5b565b60405180910390f35b3480156101a157600080fd5b506101aa610704565b6040516101b79190610c5e565b60405180910390f35b3480156101cc57600080fd5b506101d5610711565b005b6101df610249565b005b3480156101ed57600080fd5b5061020860048036038101906102039190610d1f565b6109d3565b6040516102159190610d5b565b60405180910390f35b34801561022a57600080fd5b50610233610a1b565b6040516102409190610d5b565b60405180910390f35b6802b5e3af16b1880000610288600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610a4190919063ffffffff16565b10156102c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c090610dd3565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103179190610e22565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190610e6b565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610510576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105b55760006001828154811061053657610535610e98565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610513565b50600067ffffffffffffffff8111156105d1576105d0610ec7565b5b6040519080825280602002602001820160405280156105ff5781602001602082028036833780820191505090505b5060019080519060200190610615929190610b0e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161063c90610f27565b60006040518083038185875af1925050503d8060008114610679576040519150601f19603f3d011682016040523d82523d6000602084013e61067e565b606091505b50509050806106c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b990610f88565b60405180910390fd5b50565b600181815481106106d557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610798576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561081c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107d2575b5050505050905060005b81518110156108a057600082828151811061084457610843610e98565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610826565b50600067ffffffffffffffff8111156108bc576108bb610ec7565b5b6040519080825280602002602001820160405280156108ea5781602001602082028036833780820191505090505b5060019080519060200190610900929190610b0e565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161094990610f27565b60006040518083038185875af1925050503d8060008114610986576040519150601f19603f3d011682016040523d82523d6000602084013e61098b565b606091505b50509050806109cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c690610f88565b60405180910390fd5b5050565b6000600182815481106109e9576109e8610e98565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610a4d83610a7d565b90506000670de0b6b3a76400008583610a669190610fa8565b610a709190611019565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610acb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aef91906110c2565b5050509150506402540be40081610b06919061113d565b915050919050565b828054828255906000526020600020908101928215610b87579160200282015b82811115610b865782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610b2e565b5b509050610b949190610b98565b5090565b5b80821115610bb1576000816000905550600101610b99565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610be582610bba565b9050919050565b610bf581610bda565b8114610c0057600080fd5b50565b600081359050610c1281610bec565b92915050565b600060208284031215610c2e57610c2d610bb5565b5b6000610c3c84828501610c03565b91505092915050565b6000819050919050565b610c5881610c45565b82525050565b6000602082019050610c736000830184610c4f565b92915050565b6000819050919050565b6000610c9e610c99610c9484610bba565b610c79565b610bba565b9050919050565b6000610cb082610c83565b9050919050565b6000610cc282610ca5565b9050919050565b610cd281610cb7565b82525050565b6000602082019050610ced6000830184610cc9565b92915050565b610cfc81610c45565b8114610d0757600080fd5b50565b600081359050610d1981610cf3565b92915050565b600060208284031215610d3557610d34610bb5565b5b6000610d4384828501610d0a565b91505092915050565b610d5581610bda565b82525050565b6000602082019050610d706000830184610d4c565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610dbd601b83610d76565b9150610dc882610d87565b602082019050919050565b60006020820190508181036000830152610dec81610db0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e2d82610c45565b9150610e3883610c45565b9250828201905080821115610e5057610e4f610df3565b5b92915050565b600081519050610e6581610cf3565b92915050565b600060208284031215610e8157610e80610bb5565b5b6000610e8f84828501610e56565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610f11600083610ef6565b9150610f1c82610f01565b600082019050919050565b6000610f3282610f04565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f72600b83610d76565b9150610f7d82610f3c565b602082019050919050565b60006020820190508181036000830152610fa181610f65565b9050919050565b6000610fb382610c45565b9150610fbe83610c45565b9250828202610fcc81610c45565b91508282048414831517610fe357610fe2610df3565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061102482610c45565b915061102f83610c45565b92508261103f5761103e610fea565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6110698161104a565b811461107457600080fd5b50565b60008151905061108681611060565b92915050565b6000819050919050565b61109f8161108c565b81146110aa57600080fd5b50565b6000815190506110bc81611096565b92915050565b600080600080600060a086880312156110de576110dd610bb5565b5b60006110ec88828901611077565b95505060206110fd888289016110ad565b945050604061110e88828901610e56565b935050606061111f88828901610e56565b925050608061113088828901611077565b9150509295509295909350565b60006111488261108c565b91506111538361108c565b92508282026111618161108c565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561119957611198610df3565b5b82820584148315176111ae576111ad610df3565b5b509291505056fea26469706673582212207150810826944eadc7907056becd51b1b2791d514cd6192bd454431c1402be1a64736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c80636b69a592116100595780636b69a59214610195578063a13fe71f146101c0578063b60d4288146101d7578063d7b4750c146101e1578063dba6335f1461021e576100a4565b80630343fb25146100ae5780630d8e6e2c146100eb5780630ec3b027146101165780633ccfd60b1461014157806354861af714610158576100a4565b366100a4576100a2610249565b005b6100ac610249565b005b3480156100ba57600080fd5b506100d560048036038101906100d09190610c18565b610383565b6040516100e29190610c5e565b60405180910390f35b3480156100f757600080fd5b506101006103cb565b60405161010d9190610c5e565b60405180910390f35b34801561012257600080fd5b5061012b610463565b6040516101389190610cd8565b60405180910390f35b34801561014d57600080fd5b50610156610489565b005b34801561016457600080fd5b5061017f600480360381019061017a9190610d1f565b6106c5565b60405161018c9190610d5b565b60405180910390f35b3480156101a157600080fd5b506101aa610704565b6040516101b79190610c5e565b60405180910390f35b3480156101cc57600080fd5b506101d5610711565b005b6101df610249565b005b3480156101ed57600080fd5b5061020860048036038101906102039190610d1f565b6109d3565b6040516102159190610d5b565b60405180910390f35b34801561022a57600080fd5b50610233610a1b565b6040516102409190610d5b565b60405180910390f35b6802b5e3af16b1880000610288600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610a4190919063ffffffff16565b10156102c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c090610dd3565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103179190610e22565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190610e6b565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610510576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105b55760006001828154811061053657610535610e98565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610513565b50600067ffffffffffffffff8111156105d1576105d0610ec7565b5b6040519080825280602002602001820160405280156105ff5781602001602082028036833780820191505090505b5060019080519060200190610615929190610b0e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161063c90610f27565b60006040518083038185875af1925050503d8060008114610679576040519150601f19603f3d011682016040523d82523d6000602084013e61067e565b606091505b50509050806106c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b990610f88565b60405180910390fd5b50565b600181815481106106d557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610798576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561081c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107d2575b5050505050905060005b81518110156108a057600082828151811061084457610843610e98565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610826565b50600067ffffffffffffffff8111156108bc576108bb610ec7565b5b6040519080825280602002602001820160405280156108ea5781602001602082028036833780820191505090505b5060019080519060200190610900929190610b0e565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161094990610f27565b60006040518083038185875af1925050503d8060008114610986576040519150601f19603f3d011682016040523d82523d6000602084013e61098b565b606091505b50509050806109cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c690610f88565b60405180910390fd5b5050565b6000600182815481106109e9576109e8610e98565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610a4d83610a7d565b90506000670de0b6b3a76400008583610a669190610fa8565b610a709190611019565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610acb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aef91906110c2565b5050509150506402540be40081610b06919061113d565b915050919050565b828054828255906000526020600020908101928215610b87579160200282015b82811115610b865782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610b2e565b5b509050610b949190610b98565b5090565b5b80821115610bb1576000816000905550600101610b99565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610be582610bba565b9050919050565b610bf581610bda565b8114610c0057600080fd5b50565b600081359050610c1281610bec565b92915050565b600060208284031215610c2e57610c2d610bb5565b5b6000610c3c84828501610c03565b91505092915050565b6000819050919050565b610c5881610c45565b82525050565b6000602082019050610c736000830184610c4f565b92915050565b6000819050919050565b6000610c9e610c99610c9484610bba565b610c79565b610bba565b9050919050565b6000610cb082610c83565b9050919050565b6000610cc282610ca5565b9050919050565b610cd281610cb7565b82525050565b6000602082019050610ced6000830184610cc9565b92915050565b610cfc81610c45565b8114610d0757600080fd5b50565b600081359050610d1981610cf3565b92915050565b600060208284031215610d3557610d34610bb5565b5b6000610d4384828501610d0a565b91505092915050565b610d5581610bda565b82525050565b6000602082019050610d706000830184610d4c565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610dbd601b83610d76565b9150610dc882610d87565b602082019050919050565b60006020820190508181036000830152610dec81610db0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e2d82610c45565b9150610e3883610c45565b9250828201905080821115610e5057610e4f610df3565b5b92915050565b600081519050610e6581610cf3565b92915050565b600060208284031215610e8157610e80610bb5565b5b6000610e8f84828501610e56565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610f11600083610ef6565b9150610f1c82610f01565b600082019050919050565b6000610f3282610f04565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f72600b83610d76565b9150610f7d82610f3c565b602082019050919050565b60006020820190508181036000830152610fa181610f65565b9050919050565b6000610fb382610c45565b9150610fbe83610c45565b9250828202610fcc81610c45565b91508282048414831517610fe357610fe2610df3565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061102482610c45565b915061102f83610c45565b92508261103f5761103e610fea565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6110698161104a565b811461107457600080fd5b50565b60008151905061108681611060565b92915050565b6000819050919050565b61109f8161108c565b81146110aa57600080fd5b50565b6000815190506110bc81611096565b92915050565b600080600080600060a086880312156110de576110dd610bb5565b5b60006110ec88828901611077565b95505060206110fd888289016110ad565b945050604061110e88828901610e56565b935050606061111f88828901610e56565b925050608061113088828901611077565b9150509295509295909350565b60006111488261108c565b91506111538361108c565b92508282026111618161108c565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561119957611198610df3565b5b82820584148315176111ae576111ad610df3565b5b509291505056fea26469706673582212207150810826944eadc7907056becd51b1b2791d514cd6192bd454431c1402be1a64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}